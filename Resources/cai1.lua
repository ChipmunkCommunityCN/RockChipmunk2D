-- This file is for use with Gideros Framework
--
-- This file is automatically generated with PhysicsEdtior (http://physicseditor.de). Do not edit
--
-- Usage example:
--			require "box2d"
--			local world = b2.World.new(0, 9.8)			
--			local body = world:createBody{type = b2.DYNAMIC_BODY}
--			local scaleFactor = 1.0
--			local physics = (loadfile "PhysicsData.lua")().physicsData(scaleFactor)			
--			physics:addFixture(body, objectname)
--

local M = {}

function M.physicsData(scale)
	local physics = {  data =
	{ 
		
		["cai1"] = { 
		    		anchorPoint = { 0.000, 1.000}, fixtures = {
                    
                    
                    
                    
                    {
                    pe_fixture_id = "", density = 2, friction = 0, restitution = 0, sensor=false, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   39, -114  ,  58, -121  ,  95, -104  ,  38, -94  ,  30, -102  }
                    }
                     ,
                    {
                    pe_fixture_id = "", density = 2, friction = 0, restitution = 0, sensor=false, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   97, -40  ,  113, -71  ,  121, -56  ,  120, -40  ,  110, -33  }
                    }
                     ,
                    {
                    pe_fixture_id = "", density = 2, friction = 0, restitution = 0, sensor=false, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   38, -94  ,  95, -104  ,  116, -87  ,  113, -71  ,  97, -40  ,  73, -38  ,  36, -64  ,  28, -77  }
                    }
                     ,
                    {
                    pe_fixture_id = "", density = 2, friction = 0, restitution = 0, sensor=false, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   78, -32  ,  73, -38  ,  97, -40  ,  92, -32  }
                    }
                     ,
                    {
                    pe_fixture_id = "", density = 2, friction = 0, restitution = 0, sensor=false, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   27, -43  ,  44, -26  ,  20, 0  ,  8, -7  ,  1, -21  }
                    }
                     ,
                    {
                    pe_fixture_id = "", density = 2, friction = 0, restitution = 0, sensor=false, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   36, -64  ,  73, -38  ,  44, -26  ,  27, -43  }
                    }
                    
                    
                    
			}
		}
		
	} }

        -- apply scale factor
        local s = scale or 1.0
        for bi,body in pairs(physics.data) do
                for fi,fixture in ipairs(body) do
                    if(fixture.shape) then
                        for ci,coordinate in ipairs(fixture.shape) do
                            fixture.shape[ci] = s * coordinate
                        end
                    else
                        fixture.radius = s * fixture.radius
                    end
                end
        end
	
	-- add Fixtures to body
	function physics:addFixture(body, name)
		for fi,fixture in pairs(physics.data[name].fixtures) do
			local shape
			if(fixture.shape) then
				shape = b2.PolygonShape.new()
				shape:set(unpack(fixture.shape))			
			else
				shape = b2.CircleShape.new(fixture.center.x, fixture.center.y, fixture.radius)
			end
			body:createFixture{shape = shape, density = fixture.density, restitution = fixture.restitution, friction = fixture.friction, filter = fixture.filter, isSensor=fixture.sensor}
		end
	end

	-- get anchorpoint to specific body
	function physics:getAnchorPoint(name)
		return unpack(physics.data[name].anchorPoint)		
	end
	
	return physics;
end

return M

